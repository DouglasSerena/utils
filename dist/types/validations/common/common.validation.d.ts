import { IContainsOption } from "./contains.validation";
export declare type Typeof = "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function";
export declare const noContains: (value: any, compare: any, options?: IContainsOption) => boolean;
export declare const isEqual: (value: any, compare: any) => boolean;
export declare const isDifferent: (value: any, compare: any) => boolean;
export declare const isEqualNotStrict: (value: any, compare: any) => boolean;
export declare const isDifferentNotStrict: (value: any, compare: any) => boolean;
export declare const isFill: <T = any>(item: T | T[]) => boolean;
export declare const isTypeof: (value: any, type: Typeof) => boolean;
export declare const isInstanceof: (value: any, instance: any) => boolean;
export declare const notIsInstanceof: (value: any, instance: any) => boolean;
export declare const isFalse: (value: any) => boolean;
export declare const isTrue: (value: any) => boolean;
export declare const isString: (value: any) => boolean;
export declare const isObject: (value: any) => boolean;
export declare const isArray: (value: any) => boolean;
export declare const isFunction: (value: any) => boolean;
export declare const isBoolean: (value: any) => boolean;
export declare const isNull: (value: any) => boolean;
export declare const isUndefined: (value: any) => boolean;
export declare const isCpfOrCnpj: (value: string) => boolean;
